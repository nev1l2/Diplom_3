{"name": "Показ заказов клиента", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: The element with the reference a071c806-3469-42c5-a44d-8e7858627b50 is stale; either its node document is not the active document, or it is no longer connected to the DOM; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nStaleElementReferenceError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:725:5\ngetKnownElement@chrome://remote/content/marionette/json.sys.mjs:405:11\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:263:20\ncloneObject@chrome://remote/content/marionette/json.sys.mjs:59:24\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:293:16\njson.deserialize@chrome://remote/content/marionette/json.sys.mjs:297:10\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:195:30", "trace": "self = <tests.tests_order_feed_page.TestOrderFeedPage object at 0x106bf4d60>, login_user = None, create_order = None, switch_page = <pages.switch_page.SwitchPage object at 0x106cecc20>\naccount_page = <pages.account_page.AccountPage object at 0x106cecd70>, order_feed_page = <pages.order_feed_page.OrderFeedPage object at 0x106d05e50>\norders_history_page = <pages.history_orders_page.OrderHistoryPage object at 0x106cecad0>\n\n    @allure.title('Показ заказов клиента')\n    @allure.description(\n        'Проверка наличия заказов клиента из раздела «История заказов» на странице «Лента заказов»')\n    def test_user_orders_display(self, login_user, create_order, switch_page,\n                                 account_page, order_feed_page, orders_history_page):\n        switch_page.click_account_button()\n        account_page.click_link_order_history()\n        client_orders = orders_history_page.get_order_numbers()\n        order_feed_page.open_order_feed_page()\n>       feed_orders = order_feed_page.get_orders_number()\n\ntests/tests_order_feed_page.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/order_feed_page.py:29: in get_orders_number\n    orders_numbers = list(order_number.text for order_number in self.get_visible_elements(\npages/order_feed_page.py:29: in <genexpr>\n    orders_numbers = list(order_number.text for order_number in self.get_visible_elements(\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:90: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x106c12350>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"The element with the reference a071c8...ys.mjs:297:10\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:195:30\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: The element with the reference a071c806-3469-42c5-a44d-8e7858627b50 is stale; either its node document is not the active document, or it is no longer connected to the DOM; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       StaleElementReferenceError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:725:5\nE       getKnownElement@chrome://remote/content/marionette/json.sys.mjs:405:11\nE       deserializeJSON@chrome://remote/content/marionette/json.sys.mjs:263:20\nE       cloneObject@chrome://remote/content/marionette/json.sys.mjs:59:24\nE       deserializeJSON@chrome://remote/content/marionette/json.sys.mjs:293:16\nE       json.deserialize@chrome://remote/content/marionette/json.sys.mjs:297:10\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:195:30\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: StaleElementReferenceException"}, "description": "Проверка наличия заказов клиента из раздела «История заказов» на странице «Лента заказов»", "steps": [{"name": "Кликаем на ссылку «Личный кабинет»", "status": "passed", "start": 1737137285326, "stop": 1737137285547}, {"name": "Нажимаем на ссылку \"История заказов\"", "status": "passed", "start": 1737137285547, "stop": 1737137285800}, {"name": "Получаем номера заказов пользователя из Истории заказов", "status": "passed", "start": 1737137285800, "stop": 1737137286323}, {"name": "Открываем страницу https://stellarburgers.nomoreparties.site/feed", "status": "passed", "start": 1737137286323, "stop": 1737137288048}, {"name": "Получаем список с номерами заказов", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: The element with the reference a071c806-3469-42c5-a44d-8e7858627b50 is stale; either its node document is not the active document, or it is no longer connected to the DOM; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nStaleElementReferenceError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:725:5\ngetKnownElement@chrome://remote/content/marionette/json.sys.mjs:405:11\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:263:20\ncloneObject@chrome://remote/content/marionette/json.sys.mjs:59:24\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:293:16\njson.deserialize@chrome://remote/content/marionette/json.sys.mjs:297:10\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:195:30\n\n", "trace": "  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/buzovao/Desktop/Diplom/Diplom_3/pages/order_feed_page.py\", line 29, in get_orders_number\n    orders_numbers = list(order_number.text for order_number in self.get_visible_elements(\n        OrdersFeedPageLocators.ORDERS_NUMBERS_LIST))\n  File \"/Users/buzovao/Desktop/Diplom/Diplom_3/pages/order_feed_page.py\", line 29, in <genexpr>\n    orders_numbers = list(order_number.text for order_number in self.get_visible_elements(\n                          ^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py\", line 90, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1737137288048, "stop": 1737137288222}], "parameters": [{"name": "driver", "value": "'Firefox'"}], "start": 1737137285326, "stop": 1737137288224, "uuid": "5b03756f-e204-4185-bea9-146cdbd2f856", "historyId": "d4499f248dfc07f299cd0a19aeed705b", "testCaseId": "e57630ef40b4700df37eaa068a59a501", "fullName": "tests.tests_order_feed_page.TestOrderFeedPage#test_user_orders_display", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "tests_order_feed_page"}, {"name": "subSuite", "value": "TestOrderFeedPage"}, {"name": "host", "value": "MacBook-Pro.local"}, {"name": "thread", "value": "69732-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.tests_order_feed_page"}]}